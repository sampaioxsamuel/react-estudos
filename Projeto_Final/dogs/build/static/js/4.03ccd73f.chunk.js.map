{"version":3,"sources":["Components/User/UserStatsGraphs.module.css","Components/User/UserStatsGraphs.js"],"names":["module","exports","UserStatsGraphs","data","useState","graph","setGraph","total","setTotal","useEffect","totalAcessos","map","acessos","Number","reduce","atual","ant","graphData","item","x","title","y","className","styles","graphItem","innerRadius","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill","alignment"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,MAAQ,+BAA+B,UAAY,mCAAmC,MAAQ,iC,8GCqDjGC,UAlDS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACVC,mBAAS,IADC,mBAC7BC,EAD6B,KACtBC,EADsB,OAEVF,mBAAS,GAFC,mBAE7BG,EAF6B,KAEtBC,EAFsB,KAkBpC,OAdAC,qBAAU,WACR,IACMC,EADUP,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,QAAH,OAAiBC,OAAOD,MACpBE,QAAO,SAACC,EAAOC,GAAR,OAAgBD,EAAQC,IAAK,GACjER,EAASE,GAET,IAAMO,EAAYd,EAAKQ,KAAI,SAACO,GAC1B,MAAO,CACLC,EAAGD,EAAKE,MACRC,EAAGR,OAAOK,EAAKN,aAGnBN,EAASW,KACR,CAACd,IAGF,0BAASmB,UAAS,oBAAeC,IAAOlB,OAAxC,UACE,qBAAKiB,UAAS,UAAKC,IAAOhB,MAAZ,YAAqBgB,IAAOC,WAA1C,SACE,0CAAajB,OAEf,qBAAKe,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,CACErB,KAAME,EACNoB,YAAa,GACbC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDC,MAAO,CACL5B,KAAM,CACJ6B,YAAa,GACbC,OAAQ,OACRC,YAAa,GAEfC,OAAQ,CACNC,SAAU,GACVC,KAAM,aAKd,qBAAKf,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYc,UAAU,QAAQnC,KAAME","file":"static/js/4.03ccd73f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"UserStatsGraphs_graph__3zKtr\",\"graphItem\":\"UserStatsGraphs_graphItem__3SRjL\",\"total\":\"UserStatsGraphs_total__eiXzN\"};","import { useEffect, useState } from 'react';\nimport styles from './UserStatsGraphs.module.css';\nimport { VictoryPie, VictoryChart, VictoryBar } from 'victory';\n\nconst UserStatsGraphs = ({ data }) => {\n  const [graph, setGraph] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    const acessos = data.map(({ acessos }) => Number(acessos));\n    const totalAcessos = acessos.reduce((atual, ant) => atual + ant, 0);\n    setTotal(totalAcessos);\n\n    const graphData = data.map((item) => {\n      return {\n        x: item.title,\n        y: Number(item.acessos),\n      };\n    });\n    setGraph(graphData);\n  }, [data]);\n\n  return (\n    <section className={`animeLeft ${styles.graph}`}>\n      <div className={`${styles.total} ${styles.graphItem}`}>\n        <p>Acessos: {total}</p>\n      </div>\n      <div className={styles.graphItem}>\n        <VictoryPie\n          data={graph}\n          innerRadius={50}\n          padding={{ top: 20, bottom: 20, left: 80, right: 80 }}\n          style={{\n            data: {\n              fillOpacity: 0.9,\n              stroke: '#fff',\n              strokeWidth: 2,\n            },\n            labels: {\n              fontSize: 14,\n              fill: '#333',\n            },\n          }}\n        />\n      </div>\n      <div className={styles.graphItem}>\n        <VictoryChart>\n          <VictoryBar alignment=\"start\" data={graph}></VictoryBar>\n        </VictoryChart>\n      </div>\n    </section>\n  );\n};\n\nexport default UserStatsGraphs;\n"],"sourceRoot":""}